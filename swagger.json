{
  "swagger": "2.0",
  "info": {
    "description": "This is a first attempt to create an REST api for media of my genealogy",
    "version": "1.0.0",
    "title": "Actes api",
    "contact": {
      "name": "API Team",
      "url": "http://wordnik.com",
      "email": "apiteam@wordnik.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:443",
  "basePath": "/api",
  "tags": [
    {
      "name": "Repository",
      "description": "Operations about repository"
    },
    {
      "name": "Source",
      "description": "Operations about source"
    },
    {
      "name": "Citation"
    },
    {
      "name": "Media"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/repository": {
      "get": {
        "tags": [
          "Repository"
        ],
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/repository/{repositoryid}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "description": "Finds One",
        "operationId": "findPetsByStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "default": "available"
            },
            "collectionFormat": "multi",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Error 400"
          }
        }
      }
    },
    "/source": {
      "get": {
        "tags": [
          "Source"
        ],
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Repository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}